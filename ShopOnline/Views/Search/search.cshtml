
@using PagedList.Mvc;
@using PagedList;
@model IPagedList<ShopOnline.Models.SANPHAM>
@*Css cho trang chủ ở trong thư mục content*@
<link href="~/Content/shop-homepage.css" rel="stylesheet" />

@{
    ViewBag.Title = "search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>Kết quả tìm kiếm</h2>

<div>@ViewBag.ThongBao</div>
@foreach (var sp in Model)
{
    <div class="col-sm-6 ">
        <div style="display: table; width: 100%; height: 120px;">
            <div id="HinhAnh" style="float:left; width: 100px; margin-right: 10px;">
                <a href="@Url.Action("Details", "Shop", new {id=@sp.MaSANPHAM})" />
                <img alt="@sp.TenSANPHAM" src="~/Hinhsanpham/@sp.HinhAnh" width="100" />
            </div>
            <div style="float:left; width: 220px;">
                <a href="@Url.Action("Details", "Shop", new {id=@sp.MaSANPHAM})" />
                <a class="tensanpham" href="@Url.Action("Details", "Shop", new { id=@sp.MaSANPHAM })">
                    @if (sp.TenSANPHAM.Length < 35)
                    {
                        <span>@sp.TenSANPHAM</span>
                    }
                    else
                    {
                        <span> @sp.TenSANPHAM.Substring(0, 35)...</span>
                    }
                </a>
                <div id="DonGia" style="color:orange">
                    <font color="Green">Giá: </font>@String.Format("{0:N0}", sp.Giaban) VNĐ
                </div>
                <div id="Datmua">
                    <a href="@Url.Action("DatHang","GioHang", new {@iMaSP = sp.MaSANPHAM ,  @strurl = Request.Url.ToString()})"
                       onclick="return confirm('Bạn muốn thêm sản phẩm vào giỏ hàng ');" class="button btn-proceed-checkout">ĐẶT MUA</a>
                  
                </div>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-md">
        Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)/@Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("search", new { page = page, sTuKhoa = ViewBag.TuKhoa }),
                                new PagedListRenderOptions
                                {
                                    UlElementClasses = new[] { "pagination justify-content-center" },
                                    LiElementClasses = new[] { "page-item" },
                                    FunctionToTransformEachPageLink = (liTag, aTag) => { aTag.Attributes.Add("class", "page-link"); liTag.InnerHtml = aTag.ToString(); return liTag; }
                                })
    </div>
</div>